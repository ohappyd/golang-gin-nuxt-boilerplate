# This Docker Compose file should only be used for your development environment!
version: '3.4'

services:

  traefik:
    image: traefik:2.4
    command:
      - --providers.docker
      - --providers.docker.exposedByDefault=false
      - --api.dashboard=true
      - --api.insecure=true
    labels:
      - traefik.enable=true
      - traefik.http.routers.traefik_dashboard_router.rule=Host(`traefik.$DOMAIN`)
      - traefik.http.routers.traefik_dashboard_router.service=traefik_dashboard_service
      - traefik.http.services.traefik_dashboard_service.loadbalancer.server.port=8081
    ports:
      - "80:80"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  webapp:
    build:
      context: webapp
    labels:
      - traefik.enable=true
      - traefik.http.routers.webapp_router.rule=Host(`$DOMAIN`)
      - traefik.http.routers.webapp_router.service=webapp_service
      - traefik.http.services.webapp_service.loadbalancer.server.port=3031
    expose:
      - "3000"
    command: yarn dev
    environment:
      # Docker image.
      # ---------------------
      STARTUP_COMMAND_1: "yarn"
      # Nuxt.js dev.
      # ---------------------
      # Either Vagrant or Docker requires the usage of polling, otherwise Nuxt.js does not recompile our code
      # as fast as we would like.
      CHOKIDAR_USEPOLLING: "1"
      CHOKIDAR_INTERVAL: "3000" # Lower values might increase CPU usage.
      # Host 0.0.0.0 is designated to tell Nuxt.js to resolve a host address, which is accessible to connections outside
      # of the host machine.
      HOST: "0.0.0.0"
      # Nuxt.js
      # ---------------------
      APP_NAME: "$APP_NAME"
      LOCALES_FETCH_RETRIES: "120"
      # API.
      API_URL: "http://$API_SUBDOMAIN.$DOMAIN/"
      # Hub.
      HUB_URL: "http://$HUB_SUBDOMAIN.$DOMAIN/"
      # LogRocket.
      # LOGROCKET_ID
      # LOGROCKET_DEV_MODE_ALLOWED
    volumes:
      - ./webapp:/usr/src/api
      - ~/.ssh:/home/docker/.ssh:ro
  api:
    build:
      context: './api'
    labels:
      - traefik.enable=true
      - traefik.http.routers.api_router.rule=Host(`$API_SUBDOMAIN.$DOMAIN`)
    command: npm run start:dev
    env_file:
      - .env
    networks:
      default:
        aliases:
          - "$API_SUBDOMAIN.$DOMAIN"
    volumes:
      - ./api:/usr/src/dashboard
      - ~/.ssh:/home/docker/.ssh:ro
  mysql:
    image: mysql/mysql-server:latest-aarch64
    command: --default-authentication-plugin=mysql_native_password
    ports:
      - "3308:3307"
    environment:
      MYSQL_ROOT_PASSWORD: "$MYSQL_ROOT_PASSWORD"
      MYSQL_DATABASE: "$MYSQL_DATABASE"
      MYSQL_USER: "$MYSQL_USER"
      MYSQL_PASSWORD: "$MYSQL_PASSWORD"
    volumes:
      - mysql_data:/var/lib/mysql
    # For sessions, asynchronous tasks and emails.
  redis:
    image: bitnami/redis:6.0
    environment:
      REDIS_PASSWORD: "$REDIS_PASSWORD"
    tmpfs:
      - /bitnami/redis/data
  mailhog:
    image: mailhog/mailhog:latest
    labels:
      - traefik.enable=true
      - traefik.http.routers.mailhog_router.rule=Host(`mailhog.$DOMAIN`)
      - traefik.http.routers.mailhog_router.service=mailhog_service
      - traefik.http.services.mailhog_service.loadbalancer.server.port=8027

  redis_hub:
    image: bitnami/redis:6.0
    environment:
      REDIS_PASSWORD: "$REDIS_HUB_PASSWORD"
    tmpfs:
      - /bitnami/redis/data

  phpmyadmin:
    image: phpmyadmin/phpmyadmin:5.0
    labels:
        - traefik.enable=true
        - traefik.http.routers.phpmyadmin_router.rule=Host(`phpmyadmin.$DOMAIN`)
    environment:
      PMA_HOSTS: "mysql"
      PMA_USER: "$MYSQL_USER"
      PMA_PASSWORD: "$MYSQL_PASSWORD"
volumes:
  mysql_data:
    driver: local
